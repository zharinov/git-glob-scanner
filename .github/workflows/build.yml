name: Build

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  CARGO_TERM_COLOR: always
  ZIG_VERSION: 0.10.1

jobs:
  setup-node:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3.5.2

      - name: Setup Node
        uses: actions/setup-node@v3.6.0
        with:
          node-version: 18
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

  setup-zig:
    runs-on: ubuntu-latest
    steps:
      - name: Install Zig
        uses: goto-bus-stop/setup-zig@v2.0.2
        with:
          version: ${{ env.ZIG_VERSION }}

      - name: Cache Zig
        uses: actions/cache@v3.3.1
        with:
          key: zig-${{ env.ZIG_VERSION }}-${{ runner.os }}-${{ runner.arch }}
          path: /opt/hostedtoolcache/zig/${{ env.ZIG_VERSION }}

      - name: Upload Zig
        uses: actions/upload-artifact@v3.1.2
        with:
          name: zig-${{ env.ZIG_VERSION }}-${{ runner.os }}-${{ runner.arch }}
          path: /opt/hostedtoolcache/zig/${{ env.ZIG_VERSION }}

  build:
    needs: [setup-node, setup-zig]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        os: ['linux', 'windows', 'macos']
        arch: ['x64', 'arm64']
    steps:
      - name: Checkout code
        uses: actions/checkout@v3.5.2

      - name: Setup Node
        uses: actions/setup-node@v3.6.0
        with:
          node-version: 18
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Setup Rust toolchain
        run: |
          rustup install --profile minimal 1.70.0
          rustup default 1.70.0

      - name: Setup Rust cache
        uses: Swatinem/rust-cache@v2.4.0
        with:
          cache-all-crates: 'true'
          cache-on-failure: 'true'

      - name: Install `cargo-xwin`
        if: matrix.os == 'windows'
        run: cargo install --target-dir target/cargo-xwin cargo-xwin

      - name: Install `cargo-zigbuild`
        if: matrix.os != 'windows'
        run: cargo install --target-dir target/cargo-zigbuild cargo-zigbuild

      - name: Restore Zig from cache
        uses: actions/cache@v3.3.1
        with:
          fail-on-cache-miss: true
          key: zig-${{ env.ZIG_VERSION }}-${{ runner.os }}-${{ runner.arch }}
          path: /opt/hostedtoolcache/zig/${{ env.ZIG_VERSION }}

      # - name: Install Rust targets
      #   run: yarn -s build:install-rust-targets

      # - name: Create dist folders
      #   run: yarn -s build:create-dist-folders

      # - name: Build node binaries
      #   run: yarn -s build:build-node-binaries
